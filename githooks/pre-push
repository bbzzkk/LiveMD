#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

#remote="$1"
#url="$2"

#z40=0000000000000000000000000000000000000000

#while read local_ref local_sha remote_ref remote_sha
#do
#	if [ "$local_sha" = $z40 ]
#	then
		# Handle delete
#		:
#	else
#		if [ "$remote_sha" = $z40 ]
#		then
			# New branch, examine all commits
#			range="$local_sha"
#		else
			# Update to existing branch, examine new commits
#			range="$remote_sha..$local_sha"
#		fi
#
		# Check for WIP commit
#		commit=`git rev-list -n 1 --grep '^WIP' "$range"`
#		if [ -n "$commit" ]
#		then
#			echo >&2 "Found WIP commit in $local_ref, not pushing"
#			exit 1
#		fi
#	fi
#done
#
#exit 0

FORBIDDEN_HTTPS_URL="https://github.com/bbzzkk/LiveMD.git" # insert your remote url (https)
FORBIDDEN_SSH_URL="git@github.com:bbzzkk/LiveMD.git" # insert your remote url (ssh)
FORBIDDEN_REF="refs/heads/master" # insert branch ref

remote="$1"
url="$2"

if [ "$url" != "$FORBIDDEN_HTTPS_URL" -a "$url" != "$FORBIDDEN_SSH_URL" ]
then
    exit 0 # Forked Project 에서는 제한하지 않음
fi

if read local_ref local_sha remote_ref remote_sha
then
    if [ "$remote_ref" == "$FORBIDDEN_REF" ]
    then
        echo "DO NOT PUSH it master"
        exit 1 # 금지된 ref 로 push 를 실행하면 에러
    fi
fi

exit 0
